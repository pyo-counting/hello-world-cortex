global:
  scrape_interval: 10s
  scrape_timeout: 5s
  external_labels:
    cluster: ${cluster}
    __replica__: ${HOSTNAME}
#  evaluation_interval: 5s
#  query_log_file: /prometheus/query.log

#rule_files:
#  - rule_files/alerting/*.yml
#  - rule_files/recording/*.yml

scrape_configs:
  # prometheus
  - job_name: prometheus
    consul_sd_configs:
      - server: "cortex_stack_consul:8500"
        scheme: http
        services: [prometheus]
        refresh_interval: 5m
        follow_redirects: true
    relabel_configs:
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_hostname]
        target_label:   hostname
        regex:          ^(.*)$
        replacement:    ${1}
#      # add port label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   port
#        regex:          ^(.*):(\d{1,5})$
#        replacement:    ${2}
#      # delete port label from instance label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   instance
#        regex:          ^(.*)(:\d{1,5})$
#        replacement:    ${1}
      
  # cadvisor
  - job_name: cadvisor
    consul_sd_configs:
      - server: "cortex_stack_consul:8500"
        scheme: http
        services: [cadvisor]
        refresh_interval: 5m
        follow_redirects: true
    relabel_configs:
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_hostname]
        target_label:   hostname
        regex:          ^(.*)$
        replacement:    ${1}
#      # add port label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   port
#        regex:          ^(.*):(\d{1,5})$
#        replacement:    ${2}
#      # delete port from instance label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   instance
#        regex:          ^(.*)(:\d{1,5})$
#        replacement:    ${1}
    metric_relabel_configs:
      # replace root cgroup's 'id' label with 'name' label
      - action:         replace
        source_labels:  [id]
        target_label:   name
        regex:          ^/$
        replacement:    ${0}
      # drop all 'id', 'image' label
      - action:         labeldrop
        regex:          (^id$|^image$)
        
  # node_exporter
  - job_name: node_exporter
    consul_sd_configs:
      - server: "cortex_stack_consul:8500"
        scheme: http
        services: [node-exporter]
        refresh_interval: 5m
        follow_redirects: true
    relabel_configs:
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_hostname]
        target_label:   hostname
        regex:          ^(.*)$
        replacement:    ${1}
#      # add port label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   port
#        regex:          ^(.*):(\d{1,5})$
#        replacement:    ${2}
#      # delete port from instance label
#      - action:         replace
#        source_labels:  [__address__]
#        target_label:   instance
#        regex:          ^(.*)(:\d{1,5})$
#        replacement:    ${1}
#   params:
#      collect[]: ['cpu']
        
  # http application
  - job_name: application_http
    consul_sd_configs:
      - server: "cortex_stack_consul:8500"
        scheme: http
        services: [application_http]
        refresh_interval: 5m
        follow_redirects: true
    relabel_configs:
      # add hostname label
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_hostname]
        target_label:   hostname
        regex:          ^(.*)$
        replacement:    ${1}
      # add application label
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_application]
        target_label:   application
        regex:          ^(.*)$
        replacement:    ${1}
        
  # https application
  - job_name: application_https
    consul_sd_configs:
      - server: "cortex_stack_consul:8500"
        tls_config:
          insecure_skip_verify: true
        services: [application_https]
        refresh_interval: 5m
        follow_redirects: true
    relabel_configs:
      # add hostname label
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_hostname]
        target_label:   hostname
        regex:          ^(.*)$
        replacement:    ${1}
      # add application label
      - action:         replace
        source_labels:  [__meta_consul_service_metadata_application]
        target_label:   application
        regex:          ^(.*)$
        replacement:    ${1}
        
  # harbor
#  - job_name: harbor_exporter
#    static_configs:
#      - targets: ['localhost:9091']
#  - job_name: harbor_core
#    static_configs:
#      - targets: ['localhost:9091']
#    params:
#      comp: ['core']
#  - job_name: harbor_registry
#    static_configs:
#      - targets: ['localhost:9091']
#    params:
#      comp: ['registry']

# Alerting specifies settings related to the Alertmanager
#alerting:
#  alertmanagers:
#    - static_configs:
#        - targets: ['192.168.136.61:9093']

remote_write:
  - url: http://cortex_stack_cortex_distributor:9009/api/v1/push
    remote_timeout: 15s
    headers:
      X-Scope-OrgID: fs-solution
    name: cortex
    send_exemplars: false
    queue_config:
      capacity: 2500
      max_shards: 200
      min_shards: 1
      max_samples_per_send: 500
      batch_send_deadline: 5s
      min_backoff: 30ms
      max_backoff: 5s
      retry_on_http_429: false
    metadata_config:
      send: true
      send_interval: 1m
      max_samples_per_send: 500
